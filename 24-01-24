// Check if a given graph is tree or not

class Solution {
  public:
  bool cycle(int node, int parent, vector<int> adj[], vector<bool> &visit)
    {
    visit[node] = 1;
    for (auto it : adj[node])
    {
        if (it == parent)
            continue;
        if (visit[it] == 1)
            return 1;
        else if (cycle(it, node, adj, visit))
            return 1;
    }
    return 0;
}
    int isTree(int n, int m, vector<vector<int>> &arr) {
        // code here
         vector<int> adj[n];
    for (int i = 0; i < m; i++)
    {
        adj[arr[i][0]].push_back(arr[i][1]);
        adj[arr[i][1]].push_back(arr[i][0]);
    }
    vector<bool> visit(n, 0);
    if (cycle(0, -1, adj, visit))
        return 0;
    for (int i = 0; i < n; i++)
    {
        if (visit[i] == 0)
            return 0;
    }
    return 1;
    }
};
