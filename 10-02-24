// Number of paths in a matrix with k coins

class Solution {
public:

long long solve(int i,int j,int n,int k,vector<vector<int>>&arr,vector<vector<vector<int>>>&dp){
    if(i>=n || j>=n || k<=0){
        return 0;
    }
    if(i==n-1 && j== n-1){
        return (k==arr[n-1][n-1]);
    }
    if(dp[i][j][k]!=-1){
        return dp[i][j][k];
    }
    return dp[i][j][k] = solve(i+1,j,n,k-arr[i][j],arr,dp) + solve(i,j+1,n,k-arr[i][j],arr,dp);
}
    
    long long numberOfPath(int n, int k, vector<vector<int>> &arr){
        
        // Code Here
        vector<vector<vector<int>>> dp(n,vector<vector<int>>(n,vector<int>(k+1,-1)));
        return solve(0,0,n,k,arr,dp);
    }
};
